{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anhdu\\\\OneDrive\\\\Desktop\\\\HrManager\\\\hrmanager\\\\template\\\\src\\\\components\\\\layout\\\\Alerts.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, Fragment } from 'react';\nimport { withAlert } from \"react-alert\";\nimport { connect, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useAlert } from 'react-alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Alerts(props) {\n  _s();\n\n  const alertNew = useSelector(state => state.alert);\n  console.log(alertNew);\n  const alert = useAlert();\n  useEffect(() => {\n    if (alertNew.msg !== null) alert.show(alertNew.msg, {\n      type: alertNew.type\n    });\n  }, [alertNew]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Alerts, \"SgQC1w0YkKKmpS4Ksotq7/ot/MU=\", false, function () {\n  return [useSelector, useAlert];\n});\n\n_c = Alerts;\n\nconst mapStateToProps = state => ({\n  alertRedux: state.alert\n});\n\nexport default connect(mapStateToProps)(withAlert()(Alerts));\n\nvar _c;\n\n$RefreshReg$(_c, \"Alerts\");","map":{"version":3,"sources":["C:/Users/anhdu/OneDrive/Desktop/HrManager/hrmanager/template/src/components/layout/Alerts.jsx"],"names":["useEffect","useState","Fragment","withAlert","connect","useSelector","PropTypes","useAlert","Alerts","props","alertNew","state","alert","console","log","msg","show","type","mapStateToProps","alertRedux"],"mappings":";;;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,aAAzB;;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AACnB,QAAMC,QAAQ,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,KAAhB,CAA5B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACA,QAAME,KAAK,GAAGL,QAAQ,EAAtB;AACAP,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGU,QAAQ,CAACK,GAAT,KAAiB,IAApB,EAA0BH,KAAK,CAACI,IAAN,CAAWN,QAAQ,CAACK,GAApB,EAAyB;AAACE,MAAAA,IAAI,EAAEP,QAAQ,CAACO;AAAhB,KAAzB;AAC7B,GAFQ,EAEP,CAACP,QAAD,CAFO,CAAT;AAGF,sBACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;;GAVQF,M;UACYH,W,EAEHE,Q;;;KAHTC,M;;AAWT,MAAMU,eAAe,GAAIP,KAAD,KAAY;AAChCQ,EAAAA,UAAU,EAAER,KAAK,CAACC;AADc,CAAZ,CAAxB;;AAGA,eAAeR,OAAO,CAACc,eAAD,CAAP,CAAyBf,SAAS,GAAGK,MAAH,CAAlC,CAAf","sourcesContent":["import {useEffect, useState, Fragment } from 'react'\r\nimport { withAlert } from \"react-alert\"\r\nimport { connect, useSelector } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { useAlert } from 'react-alert'\r\n\r\nfunction Alerts(props) {\r\n    const alertNew = useSelector(state => state.alert) \r\n    console.log(alertNew)\r\n    const alert = useAlert()\r\n    useEffect(() => {\r\n        if(alertNew.msg !== null) alert.show(alertNew.msg, {type: alertNew.type})\r\n    },[alertNew])\r\n  return (\r\n    <Fragment/>\r\n  )\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    alertRedux: state.alert\r\n})\r\nexport default connect(mapStateToProps)(withAlert()(Alerts));\r\n"]},"metadata":{},"sourceType":"module"}