{"ast":null,"code":"import { SET_EMPLOYEES, DELETE_EMPLOYEE, ADD_EMPLOYEE } from \"./types\";\nimport employeeApi from \"../../api/employeeApi\";\nimport { getAlerts } from \"./alertAct\";\nimport { Navigate } from \"react-router-dom\"; //getAll list Employee\n\nexport const setEmployee = items => ({\n  type: SET_EMPLOYEES,\n  payload: items\n}); // fetch all Employee\n\nexport const fetchEmployees = () => async dispatch => {\n  employeeApi.getAll().then(res => dispatch(setEmployee(res))).catch(err => dispatch(getAlerts({\n    msg: \"disconnect fetch\",\n    type: 'error'\n  })));\n}; // Delete employee\n\nexport const deleteEmployee = id => dispatch => {\n  employeeApi.delete(id).then(res => {\n    dispatch(getAlerts({\n      msg: `success delete`,\n      type: 'success'\n    }));\n    dispatch({\n      type: DELETE_EMPLOYEE,\n      payload: id\n    });\n  }).catch(err => dispatch(getAlerts({\n    msg: err.response.statusText,\n    type: 'error'\n  })));\n}; // add employee\n\nexport const addEmployee = employee => dispatch => {\n  employeeApi.post(employee).then(res => {\n    dispatch(getAlerts({\n      msg: `success create employee id ${res.id}`,\n      type: 'success'\n    }));\n    dispatch({\n      type: ADD_EMPLOYEE,\n      payload: res\n    });\n  }).catch(err => {\n    dispatch(getAlerts({\n      msg: err.response.statusText,\n      type: 'error'\n    }));\n  });\n};","map":{"version":3,"sources":["C:/Users/anhdu/OneDrive/Desktop/HrManager/hrmanager/template/src/redux/actions/employeeAct.js"],"names":["SET_EMPLOYEES","DELETE_EMPLOYEE","ADD_EMPLOYEE","employeeApi","getAlerts","Navigate","setEmployee","items","type","payload","fetchEmployees","dispatch","getAll","then","res","catch","err","msg","deleteEmployee","id","delete","response","statusText","addEmployee","employee","post"],"mappings":"AAAA,SAASA,aAAT,EAAuBC,eAAvB,EAAwCC,YAAxC,QAA2D,SAA3D;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,SAAQC,SAAR,QAAwB,YAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB,C,CACA;;AACA,OAAO,MAAMC,WAAW,GAAIC,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAER,aAD+B;AAErCS,EAAAA,OAAO,EAAEF;AAF4B,CAAZ,CAApB,C,CAIP;;AACA,OAAO,MAAMG,cAAc,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACtDR,EAAAA,WAAW,CAACS,MAAZ,GACCC,IADD,CACMC,GAAG,IAAKH,QAAQ,CAACL,WAAW,CAACQ,GAAD,CAAZ,CADtB,EAECC,KAFD,CAEOC,GAAG,IAAKL,QAAQ,CAACP,SAAS,CAAC;AAAEa,IAAAA,GAAG,EAAE,kBAAP;AAA2BT,IAAAA,IAAI,EAAE;AAAjC,GAAD,CAAV,CAFvB;AAGD,CAJM,C,CAKP;;AACA,OAAO,MAAMU,cAAc,GAAIC,EAAD,IAASR,QAAD,IAAc;AAClDR,EAAAA,WAAW,CAACiB,MAAZ,CAAmBD,EAAnB,EACCN,IADD,CACQC,GAAD,IAAS;AACdH,IAAAA,QAAQ,CAACP,SAAS,CAAC;AAACa,MAAAA,GAAG,EAAG,gBAAP;AAAwBT,MAAAA,IAAI,EAAE;AAA9B,KAAD,CAAV,CAAR;AACAG,IAAAA,QAAQ,CAAC;AAACH,MAAAA,IAAI,EAAEP,eAAP;AAAwBQ,MAAAA,OAAO,EAAEU;AAAjC,KAAD,CAAR;AACD,GAJD,EAKCJ,KALD,CAKOC,GAAG,IAAKL,QAAQ,CAACP,SAAS,CAAC;AAAEa,IAAAA,GAAG,EAAED,GAAG,CAACK,QAAJ,CAAaC,UAApB;AAAgCd,IAAAA,IAAI,EAAE;AAAtC,GAAD,CAAV,CALvB;AAMD,CAPM,C,CASP;;AACA,OAAO,MAAMe,WAAW,GAAIC,QAAD,IAAeb,QAAD,IAAc;AACrDR,EAAAA,WAAW,CAACsB,IAAZ,CAAiBD,QAAjB,EACCX,IADD,CACOC,GAAG,IAAI;AACZH,IAAAA,QAAQ,CAACP,SAAS,CAAC;AAACa,MAAAA,GAAG,EAAG,8BAA6BH,GAAG,CAACK,EAAG,EAA3C;AAA8CX,MAAAA,IAAI,EAAE;AAApD,KAAD,CAAV,CAAR;AACAG,IAAAA,QAAQ,CAAC;AACPH,MAAAA,IAAI,EAAEN,YADC;AAEPO,MAAAA,OAAO,EAAEK;AAFF,KAAD,CAAR;AAID,GAPD,EAQCC,KARD,CAQOC,GAAG,IAAI;AACZL,IAAAA,QAAQ,CAACP,SAAS,CAAC;AAAEa,MAAAA,GAAG,EAAED,GAAG,CAACK,QAAJ,CAAaC,UAApB;AAAgCd,MAAAA,IAAI,EAAE;AAAtC,KAAD,CAAV,CAAR;AACD,GAVD;AAWD,CAZM","sourcesContent":["import { SET_EMPLOYEES,DELETE_EMPLOYEE, ADD_EMPLOYEE} from \"./types\";\r\nimport employeeApi from \"../../api/employeeApi\";\r\nimport {getAlerts} from \"./alertAct\"\r\nimport { Navigate } from \"react-router-dom\";\r\n//getAll list Employee\r\nexport const setEmployee = (items) => ({\r\n  type: SET_EMPLOYEES,\r\n  payload: items,\r\n});\r\n// fetch all Employee\r\nexport const fetchEmployees = () => async (dispatch) => {\r\n  employeeApi.getAll()\r\n  .then(res =>  dispatch(setEmployee(res)))\r\n  .catch(err =>  dispatch(getAlerts({ msg: \"disconnect fetch\", type: 'error'})))\r\n};\r\n// Delete employee\r\nexport const deleteEmployee = (id) => (dispatch) => {\r\n  employeeApi.delete(id)\r\n  .then( (res) => {\r\n    dispatch(getAlerts({msg: `success delete`, type: 'success'}))\r\n    dispatch({type: DELETE_EMPLOYEE, payload: id,})\r\n  })\r\n  .catch(err =>  dispatch(getAlerts({ msg: err.response.statusText, type: 'error'})));\r\n}\r\n\r\n// add employee\r\nexport const addEmployee = (employee) => (dispatch) => {\r\n  employeeApi.post(employee)\r\n  .then( res => {\r\n    dispatch(getAlerts({msg: `success create employee id ${res.id}`, type: 'success'}))\r\n    dispatch({\r\n      type: ADD_EMPLOYEE,\r\n      payload: res\r\n    });\r\n  })\r\n  .catch(err => {\r\n    dispatch(getAlerts({ msg: err.response.statusText, type: 'error'}))\r\n  });\r\n} \r\n"]},"metadata":{},"sourceType":"module"}