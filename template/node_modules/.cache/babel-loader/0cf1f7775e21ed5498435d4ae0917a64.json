{"ast":null,"code":"import { SET_EMPLOYEES, DELETE_EMPLOYEE } from \"../actions/types.js\";\nconst initalState = {\n  somethings: \"text\",\n  list: []\n};\nexport default function employeeReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initalState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_EMPLOYEES:\n      {\n        let newList = [...action.payload];\n        return { ...state,\n          list: newList\n        };\n      }\n\n    case DELETE_EMPLOYEE:\n      {\n        let newList = [...state.list.filter(emp => emp.id != action.id)];\n        return { ...state,\n          list: newList\n        };\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/anhdu/OneDrive/Desktop/HrManager/hrmanager/template/src/redux/reducers/employees.js"],"names":["SET_EMPLOYEES","DELETE_EMPLOYEE","initalState","somethings","list","employeeReducer","state","action","type","newList","payload","filter","emp","id"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,eAAxB,QAA+C,qBAA/C;AAEA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,UAAU,EAAE,MADM;AAElBC,EAAAA,IAAI,EAAE;AAFY,CAApB;AAKA,eAAe,SAASC,eAAT,GAAsD;AAAA,MAA7BC,KAA6B,uEAArBJ,WAAqB;AAAA,MAARK,MAAQ;;AACnE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,aAAL;AACE;AAAC,YAAIS,OAAO,GAAG,CAAC,GAAGF,MAAM,CAACG,OAAX,CAAd;AACD,eAAO,EACL,GAAGJ,KADE;AAELF,UAAAA,IAAI,EAAEK;AAFD,SAAP;AAGG;;AACL,SAAKR,eAAL;AAAsB;AACpB,YAAIQ,OAAO,GAAG,CAAC,GAAGH,KAAK,CAACF,IAAN,CAAWO,MAAX,CAAkBC,GAAG,IAAIA,GAAG,CAACC,EAAJ,IAAUN,MAAM,CAACM,EAA1C,CAAJ,CAAd;AACA,eAAO,EACL,GAAGP,KADE;AAELF,UAAAA,IAAI,EAAEK;AAFD,SAAP;AAGE;;AACJ;AACE,aAAOH,KAAP;AAdJ;AAgBD","sourcesContent":["import { SET_EMPLOYEES, DELETE_EMPLOYEE } from \"../actions/types.js\";\r\n\r\nconst initalState = {\r\n  somethings: \"text\",\r\n  list: [],\r\n};\r\n\r\nexport default function employeeReducer(state = initalState, action) {\r\n  switch (action.type) {\r\n    case SET_EMPLOYEES:\r\n      {let newList = [...action.payload]\r\n      return {\r\n        ...state,\r\n        list: newList,\r\n      };}\r\n    case DELETE_EMPLOYEE: {\r\n      let newList = [...state.list.filter(emp => emp.id != action.id )]\r\n      return {\r\n        ...state,\r\n        list: newList\r\n      }}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}