{"ast":null,"code":"import _slicedToArray from\"C:/Users/anhdu/OneDrive/Desktop/HrManager/hrmanager/template/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";TableView.defaultProps={datas:[],columns:[{title:'',dataIndex:'',key:1,render:null}],onCheckBox:null};function TableView(props){var datas=props.datas,columns=props.columns,onCheckBox=props.onCheckBox;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),checkAll=_useState2[0],setCheckAll=_useState2[1];function handleCheckBoxChange(datas){if(onCheckBox){onCheckBox(datas);}}useEffect(function(){var handleCheckBoxChange=function handleCheckBoxChange(){if(datas.every(function(value){return value.isCheck===true;})){setCheckAll(true);}else setCheckAll(false);};handleCheckBoxChange();});return/*#__PURE__*/_jsx(\"div\",{className:\"align-middle overflow-x-auto border first-letter rounded-t-md\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"min-w-full divide-y divide-gray-200\",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"bg-gray-100\",children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{className:\"px-4 py-1.5 text-left text-xs font-medium  uppercase tracking-wider\",children:/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",className:\"accent-blue-500\",checked:checkAll,onChange:function onChange(e){var nowCheck=e.target.checked;handleCheckBoxChange(datas.map(function(data){data.isCheck=nowCheck;return data;}));}})}),columns.map(function(column){return/*#__PURE__*/_jsx(\"th\",{className:\"px-4 py-1.5 text-left text-xs text-gray-500 uppercase tracking-wider\",children:column.title},column.key);})]})}),/*#__PURE__*/_jsx(\"tbody\",{className:\"divide-y divide-slate-200\",children:datas.map(function(data){return/*#__PURE__*/_jsxs(\"tr\",{className:\"h-full\",children:[/*#__PURE__*/_jsx(\"td\",{className:\"px-4 py-1.5 whitespace-nowrap\",children:/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",className:\"accent-blue-500\",checked:data.isCheck,onChange:function onChange(e){var nowCheck=e.target.checked;handleCheckBoxChange(datas.map(function(dataNew){if(data.id===dataNew.id){dataNew.isCheck=nowCheck;}return dataNew;}));}})}),columns.map(function(col){if(col.render)return/*#__PURE__*/_jsx(\"td\",{className:\"px-4 py-1.5 whitespace-nowrap\",children:col.render(data)},col.key);return/*#__PURE__*/_jsx(\"td\",{className:\"px-4 py-1.5 whitespace-nowrap text-gray-500\",children:data[col.dataIndex]},col.key);})]},data.id);})})]})});}export default TableView;","map":{"version":3,"sources":["C:/Users/anhdu/OneDrive/Desktop/HrManager/hrmanager/template/src/components/table/tableView.jsx"],"names":["useState","useEffect","TableView","defaultProps","datas","columns","title","dataIndex","key","render","onCheckBox","props","checkAll","setCheckAll","handleCheckBoxChange","every","value","isCheck","e","nowCheck","target","checked","map","data","column","dataNew","id","col"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types'\r\nimport { useState, useEffect } from 'react'\r\n\r\nTableView.propTypes = {\r\n    datas: PropTypes.array,\r\n    columns: PropTypes.arrayOf(PropTypes.shape({\r\n        titel: PropTypes.string,\r\n        dataIndex: PropTypes.string,\r\n        key: PropTypes.string,\r\n        render: PropTypes.func,\r\n    })),\r\n    onCheckBox: PropTypes.func,\r\n};\r\nTableView.defaultProps = {\r\n    datas: [],\r\n    columns: [{\r\n        title: '',\r\n        dataIndex: '',\r\n        key: 1,\r\n        render: null\r\n    }],\r\n    onCheckBox: null\r\n}\r\n\r\nfunction TableView(props) {\r\n    const { datas, columns, onCheckBox } = props;\r\n    const [checkAll, setCheckAll] = useState(false);\r\n\r\n    function handleCheckBoxChange(datas) {\r\n        if (onCheckBox) {\r\n            onCheckBox(datas);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        const handleCheckBoxChange = () => {\r\n            if (datas.every((value) => { return value.isCheck === true })) {\r\n                setCheckAll(true)\r\n            } else setCheckAll(false)\r\n        }\r\n        handleCheckBoxChange()\r\n    })\r\n    return (\r\n        <div className=\"align-middle overflow-x-auto border first-letter rounded-t-md\">\r\n            <table className=\"min-w-full divide-y divide-gray-200\">\r\n                < thead className=\"bg-gray-100\">\r\n                    <tr>\r\n                        <th className=\"px-4 py-1.5 text-left text-xs font-medium  uppercase tracking-wider\">\r\n                            <input type=\"checkbox\" className=\"accent-blue-500\"\r\n                                checked={checkAll}\r\n                                onChange={e => {\r\n                                    let nowCheck = (e.target.checked)\r\n                                    handleCheckBoxChange(datas.map(data => {\r\n                                        data.isCheck = nowCheck\r\n                                        return data\r\n                                    }))\r\n                                }}\r\n                            />\r\n                        </th>\r\n                        {columns.map(column => {\r\n                            return (\r\n                                <th key={column.key} className=\"px-4 py-1.5 text-left text-xs text-gray-500 uppercase tracking-wider\">\r\n                                    {column.title}\r\n                                </th>\r\n                            )\r\n                        })}\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"divide-y divide-slate-200\">\r\n                    {datas.map(data => {\r\n                        return (\r\n                            <tr key={data.id} className=\"h-full\">\r\n                                <td className=\"px-4 py-1.5 whitespace-nowrap\">\r\n                                    <input type=\"checkbox\" className=\"accent-blue-500\"\r\n                                        checked={data.isCheck}\r\n                                        onChange={(e) => {\r\n                                            let nowCheck = e.target.checked\r\n                                            handleCheckBoxChange(\r\n                                                datas.map(dataNew => {\r\n                                                    if (data.id === dataNew.id) {\r\n                                                        dataNew.isCheck = nowCheck\r\n                                                    }\r\n                                                    return dataNew\r\n                                                })\r\n                                            )\r\n                                        }}\r\n                                    />\r\n                                </td>\r\n                                {columns.map(col => {\r\n                                    if (col.render) return (\r\n                                        <td key={col.key} className=\"px-4 py-1.5 whitespace-nowrap\">\r\n                                            {col.render(data)}\r\n                                        </td>\r\n                                    )\r\n                                    return (\r\n                                        <td key={col.key} className=\"px-4 py-1.5 whitespace-nowrap text-gray-500\">\r\n                                            {data[col.dataIndex]}\r\n                                        </td>\r\n                                    )\r\n                                })}\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nTableView.propTypes = {}\r\n\r\nexport default TableView\r\n"]},"metadata":{},"sourceType":"module"}