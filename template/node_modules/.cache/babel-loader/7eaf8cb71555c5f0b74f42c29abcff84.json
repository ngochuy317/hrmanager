{"ast":null,"code":"import { USER_LOADED, USER_LOADING, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT_SUCCESS, REGISTER_FAIL, REGISTER_SUCCESS } from '../actions/types';\nimport jwtDecode from 'jwt-decode';\nconst initialState = {\n  token: localStorage.getItem('access_token'),\n  isAuthenticated: false,\n  isLoading: false,\n  user: null\n};\nexport default function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case USER_LOADING:\n      return { ...state,\n        isLoading: true\n      };\n\n    case USER_LOADED:\n      return { ...state,\n        isAuthenticated: true,\n        isLoading: true,\n        user: action.payload.user\n      };\n\n    case LOGIN_SUCCESS:\n      return { ...state,\n        token: action.payload.jwt_token,\n        user: {\n          \"id\": action.payload.id,\n          \"name\": action.payload.name,\n          \"role\": action.payload.role\n        },\n        isAuthenticated: true,\n        isLoading: true\n      };\n\n    case REGISTER_SUCCESS:\n      return { ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        isLoading: true\n      };\n\n    case LOGOUT_SUCCESS:\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case REGISTER_FAIL:\n      return { ...state,\n        token: null,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/anhdu/OneDrive/Desktop/HrManager/hrmanager/template/src/redux/reducers/authReducer.js"],"names":["USER_LOADED","USER_LOADING","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT_SUCCESS","REGISTER_FAIL","REGISTER_SUCCESS","jwtDecode","initialState","token","localStorage","getItem","isAuthenticated","isLoading","user","state","action","type","payload","jwt_token","id","name","role"],"mappings":"AAAA,SACIA,WADJ,EAEIC,YAFJ,EAGIC,UAHJ,EAIIC,aAJJ,EAKIC,UALJ,EAMIC,cANJ,EAOIC,aAPJ,EAQIC,gBARJ,QASO,kBATP;AAUA,OAAOC,SAAP,MAAsB,YAAtB;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,cAArB,CADU;AAEjBC,EAAAA,eAAe,EAAE,KAFA;AAGjBC,EAAAA,SAAS,EAAE,KAHM;AAIjBC,EAAAA,IAAI,EAAE;AAJW,CAArB;AAOA,eAAe,YAAqC;AAAA,MAA5BC,KAA4B,uEAArBP,YAAqB;AAAA,MAARQ,MAAQ;;AAChD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKjB,YAAL;AACI,aAAO,EACH,GAAGe,KADA;AAEHF,QAAAA,SAAS,EAAE;AAFR,OAAP;;AAIJ,SAAKd,WAAL;AACI,aAAO,EACH,GAAGgB,KADA;AAEHH,QAAAA,eAAe,EAAE,IAFd;AAGHC,QAAAA,SAAS,EAAE,IAHR;AAIHC,QAAAA,IAAI,EAAEE,MAAM,CAACE,OAAP,CAAeJ;AAJlB,OAAP;;AAMJ,SAAKZ,aAAL;AACI,aAAO,EACH,GAAGa,KADA;AAEHN,QAAAA,KAAK,EAAEO,MAAM,CAACE,OAAP,CAAeC,SAFnB;AAGHL,QAAAA,IAAI,EAAE;AACF,gBAAME,MAAM,CAACE,OAAP,CAAeE,EADnB;AAEF,kBAAQJ,MAAM,CAACE,OAAP,CAAeG,IAFrB;AAGF,kBAAQL,MAAM,CAACE,OAAP,CAAeI;AAHrB,SAHH;AAQHV,QAAAA,eAAe,EAAE,IARd;AASHC,QAAAA,SAAS,EAAE;AATR,OAAP;;AAWJ,SAAKP,gBAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEH,WAAGC,MAAM,CAACE,OAFP;AAGHN,QAAAA,eAAe,EAAE,IAHd;AAIHC,QAAAA,SAAS,EAAE;AAJR,OAAP;;AAMJ,SAAKT,cAAL;AACA,SAAKH,UAAL;AACA,SAAKE,UAAL;AACA,SAAKE,aAAL;AACI,aAAO,EACH,GAAGU,KADA;AAEHN,QAAAA,KAAK,EAAE,IAFJ;AAGHK,QAAAA,IAAI,EAAE,IAHH;AAIHF,QAAAA,eAAe,EAAE,KAJd;AAKHC,QAAAA,SAAS,EAAE;AALR,OAAP;;AAOJ;AACI,aAAOE,KAAP;AA5CR;AA8CH","sourcesContent":["import {\r\n    USER_LOADED,\r\n    USER_LOADING,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    REGISTER_FAIL,\r\n    REGISTER_SUCCESS,\r\n} from '../actions/types'\r\nimport jwtDecode from 'jwt-decode'\r\nconst initialState = {\r\n    token: localStorage.getItem('access_token'),\r\n    isAuthenticated: false,\r\n    isLoading: false,\r\n    user: null,\r\n}\r\n\r\nexport default function(state= initialState,action) {\r\n    switch (action.type) {\r\n        case USER_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n            }\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                isLoading: true,\r\n                user: action.payload.user,\r\n            } \r\n        case LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                token: action.payload.jwt_token,\r\n                user: {\r\n                    \"id\": action.payload.id,\r\n                    \"name\": action.payload.name,\r\n                    \"role\": action.payload.role\r\n                },\r\n                isAuthenticated: true,\r\n                isLoading: true,\r\n            }\r\n        case REGISTER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                isAuthenticated: true,\r\n                isLoading: true,\r\n            }\r\n        case LOGOUT_SUCCESS:\r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n        case REGISTER_FAIL:\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                user: null,\r\n                isAuthenticated: false,\r\n                isLoading: false,\r\n            }\r\n        default: \r\n            return state\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}