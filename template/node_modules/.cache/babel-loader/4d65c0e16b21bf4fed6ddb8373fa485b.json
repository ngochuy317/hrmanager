{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anhdu\\\\OneDrive\\\\Desktop\\\\HrManager\\\\hrmanager\\\\template\\\\src\\\\components\\\\table\\\\tableView.jsx\";\nimport PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nTableView.propTypes = {\n  datas: PropTypes.array,\n  columns: PropTypes.arrayOf(PropTypes.shape({\n    titel: PropTypes.string,\n    dataIndex: PropTypes.string,\n    key: PropTypes.string,\n    render: PropTypes.func\n  })),\n  onCheckBox: PropTypes.func\n};\nTableView.defaultProps = {\n  datas: [],\n  columns: [{\n    title: '',\n    dataIndex: '',\n    key: 1,\n    render: null\n  }]\n};\n\nfunction TableView(props) {\n  const {\n    datas,\n    columns,\n    loading\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"align-middle overflow-x-auto border first-letter rounded-t-md\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"min-w-full divide-y divide-gray-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"bg-gray-100\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: columns.map(column => {\n            return /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-1.5 text-left text-xs text-gray-500 uppercase tracking-wider\",\n              children: column.title\n            }, column.key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        className: \"divide-y divide-slate-200\",\n        children: loading ? datas.map(data => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"h-full\",\n            children: columns.map(col => {\n              if (col.render) return /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-4 py-1.5 whitespace-nowrap\",\n                children: col.render(data)\n              }, col.key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 45\n              }, this);\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-4 py-1.5 whitespace-nowrap text-gray-500\",\n                children: data[col.dataIndex]\n              }, col.key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 45\n              }, this);\n            })\n          }, data.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 33\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_c = TableView;\nTableView.propTypes = {};\nexport default TableView;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableView\");","map":{"version":3,"sources":["C:/Users/anhdu/OneDrive/Desktop/HrManager/hrmanager/template/src/components/table/tableView.jsx"],"names":["PropTypes","useState","useEffect","TableView","propTypes","datas","array","columns","arrayOf","shape","titel","string","dataIndex","key","render","func","onCheckBox","defaultProps","title","props","loading","map","column","data","col","id"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEAC,SAAS,CAACC,SAAV,GAAsB;AAClBC,EAAAA,KAAK,EAAEL,SAAS,CAACM,KADC;AAElBC,EAAAA,OAAO,EAAEP,SAAS,CAACQ,OAAV,CAAkBR,SAAS,CAACS,KAAV,CAAgB;AACvCC,IAAAA,KAAK,EAAEV,SAAS,CAACW,MADsB;AAEvCC,IAAAA,SAAS,EAAEZ,SAAS,CAACW,MAFkB;AAGvCE,IAAAA,GAAG,EAAEb,SAAS,CAACW,MAHwB;AAIvCG,IAAAA,MAAM,EAAEd,SAAS,CAACe;AAJqB,GAAhB,CAAlB,CAFS;AAQlBC,EAAAA,UAAU,EAAEhB,SAAS,CAACe;AARJ,CAAtB;AAUAZ,SAAS,CAACc,YAAV,GAAyB;AACrBZ,EAAAA,KAAK,EAAE,EADc;AAErBE,EAAAA,OAAO,EAAE,CAAC;AACNW,IAAAA,KAAK,EAAE,EADD;AAENN,IAAAA,SAAS,EAAE,EAFL;AAGNC,IAAAA,GAAG,EAAE,CAHC;AAINC,IAAAA,MAAM,EAAE;AAJF,GAAD;AAFY,CAAzB;;AAWA,SAASX,SAAT,CAAmBgB,KAAnB,EAA0B;AACtB,QAAM;AAAEd,IAAAA,KAAF;AAASE,IAAAA,OAAT;AAAkBa,IAAAA;AAAlB,MAA8BD,KAApC;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,+DAAf;AAAA,2BACI;AAAO,MAAA,SAAS,EAAC,qCAAjB;AAAA,8BACI;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAA,+BACI;AAAA,oBACKZ,OAAO,CAACc,GAAR,CAAYC,MAAM,IAAI;AACnB,gCACI;AAAqB,cAAA,SAAS,EAAC,sEAA/B;AAAA,wBACKA,MAAM,CAACJ;AADZ,eAASI,MAAM,CAACT,GAAhB;AAAA;AAAA;AAAA;AAAA,oBADJ;AAKH,WANA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAYI;AAAO,QAAA,SAAS,EAAC,2BAAjB;AAAA,kBACKO,OAAO,GACJf,KAAK,CAACgB,GAAN,CAAUE,IAAI,IAAI;AACd,8BACI;AAAkB,YAAA,SAAS,EAAC,QAA5B;AAAA,sBACKhB,OAAO,CAACc,GAAR,CAAYG,GAAG,IAAI;AAChB,kBAAIA,GAAG,CAACV,MAAR,EAAgB,oBACZ;AAAkB,gBAAA,SAAS,EAAC,+BAA5B;AAAA,0BACKU,GAAG,CAACV,MAAJ,CAAWS,IAAX;AADL,iBAASC,GAAG,CAACX,GAAb;AAAA;AAAA;AAAA;AAAA,sBADY;AAKhB,kCACI;AAAkB,gBAAA,SAAS,EAAC,6CAA5B;AAAA,0BACKU,IAAI,CAACC,GAAG,CAACZ,SAAL;AADT,iBAASY,GAAG,CAACX,GAAb;AAAA;AAAA;AAAA;AAAA,sBADJ;AAKH,aAXA;AADL,aAASU,IAAI,CAACE,EAAd;AAAA;AAAA;AAAA;AAAA,kBADJ;AAgBH,SAjBD,CADI,gBAkBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAnBb;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAuCH;;KA1CQtB,S;AA4CTA,SAAS,CAACC,SAAV,GAAsB,EAAtB;AAEA,eAAeD,SAAf","sourcesContent":["import PropTypes from 'prop-types'\r\nimport { useState, useEffect } from 'react'\r\n\r\nTableView.propTypes = {\r\n    datas: PropTypes.array,\r\n    columns: PropTypes.arrayOf(PropTypes.shape({\r\n        titel: PropTypes.string,\r\n        dataIndex: PropTypes.string,\r\n        key: PropTypes.string,\r\n        render: PropTypes.func,\r\n    })),\r\n    onCheckBox: PropTypes.func,\r\n};\r\nTableView.defaultProps = {\r\n    datas: [],\r\n    columns: [{\r\n        title: '',\r\n        dataIndex: '',\r\n        key: 1,\r\n        render: null\r\n    }],\r\n    \r\n}\r\n\r\nfunction TableView(props) {\r\n    const { datas, columns, loading } = props;\r\n    \r\n    return (\r\n        <div className=\"align-middle overflow-x-auto border first-letter rounded-t-md\">\r\n            <table className=\"min-w-full divide-y divide-gray-200\">\r\n                < thead className=\"bg-gray-100\">\r\n                    <tr>\r\n                        {columns.map(column => {\r\n                            return (\r\n                                <th key={column.key} className=\"px-4 py-1.5 text-left text-xs text-gray-500 uppercase tracking-wider\">\r\n                                    {column.title}\r\n                                </th>\r\n                            )\r\n                        })}\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"divide-y divide-slate-200\">\r\n                    {loading ?\r\n                        datas.map(data => {\r\n                            return (\r\n                                <tr key={data.id} className=\"h-full\">\r\n                                    {columns.map(col => {\r\n                                        if (col.render) return (\r\n                                            <td key={col.key} className=\"px-4 py-1.5 whitespace-nowrap\">\r\n                                                {col.render(data)}\r\n                                            </td>\r\n                                        )\r\n                                        return (\r\n                                            <td key={col.key} className=\"px-4 py-1.5 whitespace-nowrap text-gray-500\">\r\n                                                {data[col.dataIndex]}\r\n                                            </td>\r\n                                        )\r\n                                    })}\r\n                                </tr>\r\n                            )\r\n                        }) : <p>Loading...</p>\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nTableView.propTypes = {}\r\n\r\nexport default TableView\r\n"]},"metadata":{},"sourceType":"module"}