{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anhdu\\\\Desktop\\\\HrManager\\\\appmanager\\\\template\\\\src\\\\pages\\\\EmployeePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { UilExport, UilFilter } from \"@iconscout/react-unicons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EmployeePage(props) {\n  _s();\n\n  const {\n    employees,\n    fetchEmployees\n  } = props;\n  useEffect(() => {\n    fetchEmployees();\n  }, [fetchEmployees]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"font-medium text-sm\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-12 bg-slate-200 flex justify-between items-center px-5 shadow border-b border-gray-300\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Total:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-blue-700 mx-2\",\n          children: \"#\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-white flex items-center \",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"add\",\n          className: \" bg-sky-600 px-2 py-1 rounded hover:bg-sky-700 ml-2\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"add\",\n          className: \" bg-sky-600 px-2 py-1 rounded hover:bg-sky-700 ml-2\",\n          children: \"Import\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"add\",\n          className: \"flex item-center bg-sky-600 px-2 py-1 rounded hover:bg-sky-700 ml-2\",\n          children: [/*#__PURE__*/_jsxDEV(UilExport, {\n            className: \"h-5 w-5 mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Export\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(UilFilter, {\n          className: \"text-gray-600 w-6 h-6 font-normal ml-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"align-middle overflow-x-auto border first-letter rounded-t-md my-3\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"min-w-full divide-y divide-gray-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"bg-gray-100\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-3 text-left text-xs font-medium  uppercase tracking-wider\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                className: \"accent-blue-500\",\n                checked: checkAll,\n                onChange: e => {\n                  let nowCheck = e.target.checked;\n                  handleCheckBoxChange(datas.map(data => {\n                    data.isCheck = nowCheck;\n                    return data;\n                  }));\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this), columns.map(column => {\n              return /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-4 py-3 text-left text-xs text-gray-500 uppercase tracking-wider\",\n                children: column.title\n              }, column.key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          className: \"divide-y divide-gray-200\",\n          children: datas.map(data => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"h-full\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-4 py-2 whitespace-nowrap\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  className: \"accent-blue-500\",\n                  checked: data.isCheck,\n                  onChange: e => {\n                    let nowCheck = e.target.checked;\n                    handleCheckBoxChange(datas.map(dataNew => {\n                      if (data.id === dataNew.id) {\n                        dataNew.isCheck = nowCheck;\n                      }\n\n                      return dataNew;\n                    }));\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }, this), columns.map(col => {\n                if (col.render) return /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-4 py-2 whitespace-nowrap\",\n                  children: col.render(data)\n                }, col.key, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 25\n                }, this);\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-4 py-4 whitespace-nowrap text-gray-500\",\n                  children: data[col.dataIndex]\n                }, col.key, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 23\n                }, this);\n              })]\n            }, data.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EmployeePage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = EmployeePage;\nEmployeePage.propTypes = {\n  employees: PropTypes.array.isRequired,\n  fetchEmployees: PropTypes.func\n};\nEmployeePage.defaultProps = {\n  fetchEmployees: null\n};\nexport default EmployeePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeePage\");","map":{"version":3,"sources":["C:/Users/anhdu/Desktop/HrManager/appmanager/template/src/pages/EmployeePage.js"],"names":["React","useEffect","PropTypes","Link","UilExport","UilFilter","EmployeePage","props","employees","fetchEmployees","checkAll","e","nowCheck","target","checked","handleCheckBoxChange","datas","map","data","isCheck","columns","column","title","key","dataNew","id","col","render","dataIndex","propTypes","array","isRequired","func","defaultProps"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UilExport, UilFilter } from \"@iconscout/react-unicons\";\r\n\r\nfunction EmployeePage(props) {\r\n  const { employees, fetchEmployees } = props;\r\n  useEffect(() => {\r\n    fetchEmployees();\r\n  }, [fetchEmployees]);\r\n  return (\r\n    <div className=\"font-medium text-sm\">\r\n      <div className=\"h-12 bg-slate-200 flex justify-between items-center px-5 shadow border-b border-gray-300\">\r\n        <div>\r\n          <span>Total:</span>\r\n          <span className=\"text-blue-700 mx-2\">#</span>\r\n        </div>\r\n        <div className=\"text-white flex items-center \">\r\n          <Link\r\n            to=\"add\"\r\n            className=\" bg-sky-600 px-2 py-1 rounded hover:bg-sky-700 ml-2\"\r\n          >\r\n            Add\r\n          </Link>\r\n          <Link\r\n            to=\"add\"\r\n            className=\" bg-sky-600 px-2 py-1 rounded hover:bg-sky-700 ml-2\"\r\n          >\r\n            Import\r\n          </Link>\r\n          <Link\r\n            to=\"add\"\r\n            className=\"flex item-center bg-sky-600 px-2 py-1 rounded hover:bg-sky-700 ml-2\"\r\n          >\r\n            <UilExport className=\"h-5 w-5 mr-1\" />\r\n            <span>Export</span>\r\n          </Link>\r\n          <UilFilter className=\"text-gray-600 w-6 h-6 font-normal ml-2\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"align-middle overflow-x-auto border first-letter rounded-t-md my-3\">\r\n        <table className=\"min-w-full divide-y divide-gray-200\">\r\n          <thead className=\"bg-gray-100\">\r\n            <tr>\r\n              <th className=\"px-4 py-3 text-left text-xs font-medium  uppercase tracking-wider\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"accent-blue-500\"\r\n                  checked={checkAll}\r\n                  onChange={(e) => {\r\n                    let nowCheck = e.target.checked;\r\n                    handleCheckBoxChange(\r\n                      datas.map((data) => {\r\n                        data.isCheck = nowCheck;\r\n                        return data;\r\n                      })\r\n                    );\r\n                  }}\r\n                />\r\n              </th>\r\n              {columns.map((column) => {\r\n                return (\r\n                  <th\r\n                    key={column.key}\r\n                    className=\"px-4 py-3 text-left text-xs text-gray-500 uppercase tracking-wider\"\r\n                  >\r\n                    {column.title}\r\n                  </th>\r\n                );\r\n              })}\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"divide-y divide-gray-200\">\r\n            {datas.map((data) => {\r\n              return (\r\n                <tr key={data.id} className=\"h-full\">\r\n                  <td className=\"px-4 py-2 whitespace-nowrap\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      className=\"accent-blue-500\"\r\n                      checked={data.isCheck}\r\n                      onChange={(e) => {\r\n                        let nowCheck = e.target.checked;\r\n                        handleCheckBoxChange(\r\n                          datas.map((dataNew) => {\r\n                            if (data.id === dataNew.id) {\r\n                              dataNew.isCheck = nowCheck;\r\n                            }\r\n                            return dataNew;\r\n                          })\r\n                        );\r\n                      }}\r\n                    />\r\n                  </td>\r\n                  {columns.map((col) => {\r\n                    if (col.render)\r\n                      return (\r\n                        <td\r\n                          key={col.key}\r\n                          className=\"px-4 py-2 whitespace-nowrap\"\r\n                        >\r\n                          {col.render(data)}\r\n                        </td>\r\n                      );\r\n                    return (\r\n                      <td\r\n                        key={col.key}\r\n                        className=\"px-4 py-4 whitespace-nowrap text-gray-500\"\r\n                      >\r\n                        {data[col.dataIndex]}\r\n                      </td>\r\n                    );\r\n                  })}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      {/* <div className=\"\">\r\n        {employees[0] ? (\r\n          <ul>\r\n            {employees.map((item) => {\r\n              return <li key={item.id}> {item.name}</li>;\r\n            })}\r\n          </ul>\r\n        ) : (\r\n          <p>No data</p>\r\n        )}\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nEmployeePage.propTypes = {\r\n  employees: PropTypes.array.isRequired,\r\n  fetchEmployees: PropTypes.func,\r\n};\r\nEmployeePage.defaultProps = {\r\n  fetchEmployees: null,\r\n};\r\nexport default EmployeePage;\r\n"]},"metadata":{},"sourceType":"module"}